#!/usr/bin/env sh

## Description: Builds the trial experience, and its artifact, from the current code base.
## Usage: build-trial
## Example: "ddev build-trial"

# This script is also used by our CI pipeline to build the published trial
# artifact.
# @see .gitlab-ci.yml

# Stop this entire script if any one command fails.
set -e

cd trial

# Blow away any previous build.
rm -r -f build ./public/assets/trial.zip

cp -R ../project_template build
cp -R -v ./artifact_assets/* build
cd build

# Ensure all the recipes are defined as path repositories.
find ../../ -maxdepth 1 -type d -name 'dxpr_cms*' -exec composer config repositories.{} path {} ';'

# Force Composer Patches to rebuild the patch list when dependencies are
# installed.
rm -r -f patches.lock.json

# Append to `default.settings.php` for default settings needed in WebAssembly, such as disabling permission hardening
# and CSS/JS aggregation.
composer config --merge --json 'extra.drupal-scaffold.file-mapping' '{"[web-root]/sites/default/default.settings.php": {"append": "./scaffold/default.settings.php"}}'

# Make the trial module available as a Composer package, and install it along with
# all other dependencies.
composer config repositories.dxpr_cms_trial path dxpr_cms_trial
COMPOSER_MIRROR_PATH_REPOS=1 composer require --update-no-dev drupal/dxpr_cms_trial

# Minimize the size of the artifact by deleting stuff we'll never need for
# the trial.
find . -depth -type d -name tests -exec rm -r -f "{}" ';'

# Create the trial archive.
composer archive --dir=../public/assets --file=trial --format=zip

# If we're not running in CI, cleanly install the trial experience's dependencies and build it.
if [ -z "$CI" ]; then
  cd ..
  npm clean-install
  npm run build
fi
